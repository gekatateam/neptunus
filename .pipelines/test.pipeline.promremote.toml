[settings]
  id = "test.pipeline.promremote"
  lines = 5
  run = false
  buffer = 1_000
  log_level = "warn"

[[keykeepers]]
  [keykeepers.self]
    alias = "self"

[[inputs]]
  [inputs.cronjob]
    location = "UTC"
    [[inputs.cronjob.jobs]]
      name = "@{self:settings.id}"
      schedule = "@every 5s"
      force = true

[[processors]]
  [processors.line]

[[processors]]
  [processors.starlark]
    code = '''
extdata = {
    "counter": 0.0,
}

def process(event):
    extdata["counter"] = extdata["counter"] + 0.1

    event.setLabel("forTest", "true")
    event.setField("counter.stats", extdata["counter"])

    return event
    '''

[[processors]]
  [processors.stats]
    mode = "shared"
    period = "15s"
    routing_key = "neptunus.generated.metric"
    labels = [ "schedule", "forTest" ]
    [processors.stats.fields]
      "counter.stats" = ["count", "sum", "avg", "gauge", "max", "min", "histogram"]

[[processors]]
  [processors.log]
    log_level = "debug"
    level = "debug"
    [processors.log.filters.glob]
      routing_key = [ "neptunus.generated.metric" ]
    [processors.log.serializer]
      type = "json"
      data_only = false

[[outputs]]
  [outputs.promremote]
    host = "http://localhost:9090/api/v1/write"
    ignore_labels = [ "::type", "::name" ]
    retry_attempts = 1
    [outputs.promremote.filters.glob]
      routing_key = [ "neptunus.generated.metric" ]
